@startuml
'https://plantuml.com/sequence-diagram
skinparam ParticipantPadding 30

Actor User
participant ":Medicine" as Medicine
participant ":NurseSchedException" as NurseSchedException
participant ":medicineList:ArrayList<Medicine>" as medicineList
participant ":MedicineStorage" as medicineStorage
participant ":medicine:Medicine" as medicine
participant " existingMedicine:Medicine" as existingMedicine


User -> Medicine: addMedicine(quantity, medicineName)
activate Medicine
'if medicine name empty
opt medicineName.trim().isEmpty()
create NurseSchedException
Medicine -> NurseSchedException : NurseSchedException()
activate NurseSchedException

NurseSchedException --> User : NurseSchedException
    deactivate NurseSchedException
end

'find if there is an existing medicine
'findSpecifiedMedicine will return medicine
Medicine -> existingMedicine : findSpecificMedicine(medicineName)
activate existingMedicine
loop for each medicine in medicineList
existingMedicine -> medicineList : getMedicineName()
deactivate existingMedicine
activate medicineList
alt equalsIgnore\nCase(existing\nMedicine)

medicineList --> existingMedicine: medicine
activate existingMedicine

else !equalsIgnoreCase\n(existingMedicine)
medicineList --> existingMedicine: null
deactivate medicineList
end
activate existingMedicine

end

existingMedicine --> Medicine : medicine / null
deactivate existingMedicine

'if statement: when existing medicine exists
alt existingMedicine != null
Medicine -> existingMedicine : addQuantity(quantity)
activate existingMedicine
existingMedicine --> Medicine
deactivate existingMedicine

create medicineStorage
medicineList ->medicineStorage : overwriteSaveFile(medicineList)
activate medicineList
activate medicineStorage
medicineStorage --> medicineList
'dk if need or not
deactivate medicineStorage
deactivate medicineList
Medicine -->User : System.out.println()

'else statement
else existingMedicine == null
create medicine
Medicine -> medicine : Medicine(quantity, medicineName)
activate medicine
medicine --> Medicine
deactivate medicine

Medicine -> medicineList : add(medicine)
activate medicineList
medicineList --> Medicine
deactivate medicineList

medicineList -> medicineStorage : overwriteSaveFile(medicineList)
activate medicineList
activate medicineStorage
medicineStorage --> medicineList
deactivate medicineStorage
deactivate medicineList

Medicine -->User : System.out.println()
'dk if need or not
deactivate Medicine
end

@enduml